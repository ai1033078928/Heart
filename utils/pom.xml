<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>org.example</groupId>
    <artifactId>utils</artifactId>
    <packaging>pom</packaging>
    <version>1.0-SNAPSHOT</version>
    <modules>
        <module>apache</module>
        <module>hutool</module>
        <module>sqlparser</module>
        <module>databases</module>
    </modules>

    <properties>
        <file.encoding>UTF-8</file.encoding>
        <java.source.version>1.8</java.source.version>
        <java.target.version>1.8</java.target.version>
        <junit.version>4.12</junit.version>

        <apache.lang3>3.1</apache.lang3>
        <apache.io>2.11.0</apache.io>
        <apache.csv>1.9.0</apache.csv>
        <hutool.version>5.7.18</hutool.version>
        <mail.version>1.6.2</mail.version>
        <qrcode.version>3.4.1</qrcode.version>
    </properties>

    <!--<dependencies>

        &lt;!&ndash; 是处理Java基本对象方法的工具类包，该类包提供对字符、数组等基本对象的操作，弥补了java.lang api基本处理方法上的不足。 &ndash;&gt;
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
            <version>${apache.lang3}</version>
        </dependency>

        <dependency>
            <groupId>commons-io</groupId>
            <artifactId>commons-io</artifactId>
            <version>${apache.io}</version>
        </dependency>

        &lt;!&ndash; 难得糊涂 &ndash;&gt;
        <dependency>
            <groupId>cn.hutool</groupId>
            <artifactId>hutool-all</artifactId>
            <version>${hutool.version}</version>
        </dependency>

        &lt;!&ndash;单元测试&ndash;&gt;
        &lt;!&ndash; https://mvnrepository.com/artifact/junit/junit &ndash;&gt;
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>${junit.version}</version>
            &lt;!&ndash; maven认为，程序对外部的依赖会随着程序的所处阶段和应用场景而变化，所以maven中的依赖关系有作用域(scope)的限制。 &ndash;&gt;
            &lt;!&ndash;scope包含如下的取值：compile（编译范围）、provided（已提供范围）、runtime（运行时范围）、test（测试范围）、system（系统范围） &ndash;&gt;
            <scope>test</scope>
        </dependency>
    </dependencies>-->

</project>